version: 2

defaults: &defaults
  working_directory: ~/money-dashboard
  docker:
    - image: circleci/node:9.11.2

jobs:
  setup:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}
            - dependency-cache-{{ checksum "package.json" }}-
            - dependency-cache-
      - run:
          name: Install dependencies
          command: yarn install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - persist_to_workspace:
          root: .
          paths:
            - .

  lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Run Linter
          command: yarn lint

  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Run Tests
          command: yarn test
      - run:
          name: Copy Results
          command: |
            mkdir -p /test-results/mocha
            [[ -e test-results.xml ]] && cp test-results.xml /test-results/mocha/test-results.xml
      - store_test_results:
          path: /test-results

  build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Build
          command: yarn build

  deploy:
    <<: *defaults
    steps:
      - add_ssh_keys:
          fingerprints:
            - "98:46:b4:aa:3e:3f:5a:09:66:f0:97:cc:60:e0:4d:e9"
      - attach_workspace:
          at: .
      - run:
          name: Deploy
          command: |
            ssh-keyscan $DEPLOY_HOST >> ~/.ssh/known_hosts
            ssh $DEPLOY_USER@$DEPLOY_HOST "cd $DEPLOY_DIR && git pull && ./.scripts/deploy-remote.sh"

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - setup
      - lint:
          requires:
            - setup
          filters:
            tags:
              only: /.*/
      - test:
          requires:
            - setup
          filters:
            tags:
              only: /.*/
      - build:
          requires:
            - lint
            - test
          filters:
            tags:
              only: /.*/
      - deploy:
          requires:
            - build
          # filters are OR'd, branches are included by default and tags are excluded by default,
          # so this excludes all branches and runs only if there is a tagged commit
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
