syntax = "proto3";
package moneydashboard.v4;

import "moneydashboard/v4/assets.proto";
import "moneydashboard/v4/categories.proto";
import "moneydashboard/v4/currencies.proto";
import "moneydashboard/v4/envelopes.proto";
import "moneydashboard/v4/holdings.proto";

option go_package = "github.com/markormesher/money-dashboard/internal/api_gen/moneydashboard/v4;mdv4";

message HoldingBalance {
  Holding holding = 1;
  double raw_balance = 2;
  double gbp_balance = 3;
}

message CategoryBalance {
  Category category = 1;
  Asset asset = 2;
  Currency currency = 3;
  double raw_balance = 4;
}

message EnvelopeBalance {
  Envelope envelope = 1;
  double gbp_balance = 2;
}

message BalanceHistoryEntry {
  int64 date = 1;
  double gbp_balance = 2;
}

message TaxReport {
  repeated HoldingBalance interest_income = 1;
  repeated HoldingBalance dividend_income = 2;
  repeated TaxReportCapitalEvent capital_events = 3;
}

message TaxReportCapitalEvent {
  Holding holding = 1;
  string type = 2;
  int64 date = 3;
  double qty = 4;
  double avg_original_unit_price = 5;
  double avg_gbp_unit_price = 6;
  double qty_matched = 7;
  repeated TaxReportCapitalEventMatch matches = 8;
}

message TaxReportCapitalEventMatch {
  double qty = 1;
  int64 date = 2;
  double price = 3;
  string note = 4;
}

message GetHoldingBalancesRequest {}

message GetHoldingBalancesResponse {
  repeated HoldingBalance balances = 1;
}

message GetNonZeroMemoBalancesRequest {}

message GetNonZeroMemoBalancesResponse {
  repeated CategoryBalance balances = 1;
}

message GetEnvelopeBalancesRequest {}

message GetEnvelopeBalancesResponse {
  repeated EnvelopeBalance balances = 1;
}

message GetBalanceHistoryRequest {
  int64 start_date = 1;
  int64 end_date = 2;
}

message GetBalanceHistoryResponse {
  repeated BalanceHistoryEntry entries = 1;
}

message GetTaxReportRequest {
  int32 tax_year = 1;
}

message GetTaxReportResponse {
  TaxReport tax_report = 1;
}

service MDReportingService {
  rpc GetHoldingBalances(GetHoldingBalancesRequest) returns (GetHoldingBalancesResponse);
  rpc GetNonZeroMemoBalances(GetNonZeroMemoBalancesRequest) returns (GetNonZeroMemoBalancesResponse);
  rpc GetEnvelopeBalances(GetEnvelopeBalancesRequest) returns (GetEnvelopeBalancesResponse);
  rpc GetBalanceHistory(GetBalanceHistoryRequest) returns (GetBalanceHistoryResponse);
  rpc GetTaxReport(GetTaxReportRequest) returns (GetTaxReportResponse);
}
