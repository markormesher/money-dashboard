version: "3.3"

services:
  client:
    build:
      context: .
      dockerfile: docker/client/Dockerfile
    restart: always
    networks:
      - traefik
      - internal
    depends_on:
      - api
    environment:
      - NPM_EXECPATH=yarn
      - npm_execpath=yarn
    volumes:
      - ./logs:/app/logs
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik_default
      - traefik.http.routers.money-dashboard-client.rule=Host(`money-dashboard.markormesher.co.uk`, `www.money-dashboard.markormesher.co.uk`)
      - traefik.http.routers.money-dashboard-client.tls.certresolver=letsencrypt

  api:
    build:
      context: .
      dockerfile: docker/api/Dockerfile
    restart: always
    networks:
      - traefik
      - internal
    depends_on:
      - redis
      - postgres_primary
    secrets:
      - cron.secret
      - google.client.id
      - google.client.secret
      - open-exchange-rates.key
      - postgres.password
      - session.secret
    environment:
      - NPM_EXECPATH=yarn
      - npm_execpath=yarn
      - RUNNING_IN=docker
      - IS_PRIMARY_SERVER=yes
    volumes:
      - ./logs:/app/logs
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik_default
      - traefik.http.routers.money-dashboard-api.rule=Host(`money-dashboard.markormesher.co.uk`, `www.money-dashboard.markormesher.co.uk`) && PathPrefix(`/api`)
      - traefik.http.routers.money-dashboard-api.tls.certresolver=letsencrypt

  cron:
    build: ./docker/cron
    restart: always
    networks:
      - internal
    depends_on:
      - api
    secrets:
      - cron.secret

  postgres_primary:
    image: postgres:10.1-alpine
    restart: always
    networks:
      - internal
    secrets:
      - postgres.password
    environment:
      - POSTGRES_DATABASE=money_dashboard
      - POSTGRES_USER=money_dashboard
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres.password
    volumes:
      - postgres-primary-data:/var/lib/postgresql/data

  redis:
    image: redis:3.2-alpine
    restart: always
    networks:
      - internal
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data

volumes:
  postgres-primary-data:
  redis-data:

secrets:
  cron.secret:
    file: ./src/api/config/secrets/cron.secret
  google.client.id:
    file: ./src/api/config/secrets/google.client.id
  google.client.secret:
    file: ./src/api/config/secrets/google.client.secret
  open-exchange-rates.key:
    file: ./src/api/config/secrets/open-exchange-rates.key
  postgres.password:
    file: ./src/api/config/secrets/postgres.password
  session.secret:
    file: ./src/api/config/secrets/session.secret

networks:
  internal:
    external: false
  traefik:
    external:
      name: traefik_default
