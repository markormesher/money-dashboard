// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        (unknown)
// source: moneydashboard/v4/holdings.proto

package mdv4

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Holding struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Active        bool                   `protobuf:"varint,3,opt,name=active,proto3" json:"active,omitempty"`
	Currency      *Currency              `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	Asset         *Asset                 `protobuf:"bytes,5,opt,name=asset,proto3" json:"asset,omitempty"`
	Account       *Account               `protobuf:"bytes,6,opt,name=account,proto3" json:"account,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Holding) Reset() {
	*x = Holding{}
	mi := &file_moneydashboard_v4_holdings_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Holding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Holding) ProtoMessage() {}

func (x *Holding) ProtoReflect() protoreflect.Message {
	mi := &file_moneydashboard_v4_holdings_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Holding.ProtoReflect.Descriptor instead.
func (*Holding) Descriptor() ([]byte, []int) {
	return file_moneydashboard_v4_holdings_proto_rawDescGZIP(), []int{0}
}

func (x *Holding) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Holding) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Holding) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Holding) GetCurrency() *Currency {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *Holding) GetAsset() *Asset {
	if x != nil {
		return x.Asset
	}
	return nil
}

func (x *Holding) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

type GetHoldingByIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHoldingByIdRequest) Reset() {
	*x = GetHoldingByIdRequest{}
	mi := &file_moneydashboard_v4_holdings_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHoldingByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHoldingByIdRequest) ProtoMessage() {}

func (x *GetHoldingByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moneydashboard_v4_holdings_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHoldingByIdRequest.ProtoReflect.Descriptor instead.
func (*GetHoldingByIdRequest) Descriptor() ([]byte, []int) {
	return file_moneydashboard_v4_holdings_proto_rawDescGZIP(), []int{1}
}

func (x *GetHoldingByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetHoldingByIdResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Holding       *Holding               `protobuf:"bytes,1,opt,name=holding,proto3" json:"holding,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHoldingByIdResponse) Reset() {
	*x = GetHoldingByIdResponse{}
	mi := &file_moneydashboard_v4_holdings_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHoldingByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHoldingByIdResponse) ProtoMessage() {}

func (x *GetHoldingByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moneydashboard_v4_holdings_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHoldingByIdResponse.ProtoReflect.Descriptor instead.
func (*GetHoldingByIdResponse) Descriptor() ([]byte, []int) {
	return file_moneydashboard_v4_holdings_proto_rawDescGZIP(), []int{2}
}

func (x *GetHoldingByIdResponse) GetHolding() *Holding {
	if x != nil {
		return x.Holding
	}
	return nil
}

type GetAllHoldingsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllHoldingsRequest) Reset() {
	*x = GetAllHoldingsRequest{}
	mi := &file_moneydashboard_v4_holdings_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllHoldingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllHoldingsRequest) ProtoMessage() {}

func (x *GetAllHoldingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moneydashboard_v4_holdings_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllHoldingsRequest.ProtoReflect.Descriptor instead.
func (*GetAllHoldingsRequest) Descriptor() ([]byte, []int) {
	return file_moneydashboard_v4_holdings_proto_rawDescGZIP(), []int{3}
}

type GetAllHoldingsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Holdings      []*Holding             `protobuf:"bytes,1,rep,name=holdings,proto3" json:"holdings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllHoldingsResponse) Reset() {
	*x = GetAllHoldingsResponse{}
	mi := &file_moneydashboard_v4_holdings_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllHoldingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllHoldingsResponse) ProtoMessage() {}

func (x *GetAllHoldingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moneydashboard_v4_holdings_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllHoldingsResponse.ProtoReflect.Descriptor instead.
func (*GetAllHoldingsResponse) Descriptor() ([]byte, []int) {
	return file_moneydashboard_v4_holdings_proto_rawDescGZIP(), []int{4}
}

func (x *GetAllHoldingsResponse) GetHoldings() []*Holding {
	if x != nil {
		return x.Holdings
	}
	return nil
}

type UpsertHoldingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Holding       *Holding               `protobuf:"bytes,1,opt,name=holding,proto3" json:"holding,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertHoldingRequest) Reset() {
	*x = UpsertHoldingRequest{}
	mi := &file_moneydashboard_v4_holdings_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertHoldingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertHoldingRequest) ProtoMessage() {}

func (x *UpsertHoldingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moneydashboard_v4_holdings_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertHoldingRequest.ProtoReflect.Descriptor instead.
func (*UpsertHoldingRequest) Descriptor() ([]byte, []int) {
	return file_moneydashboard_v4_holdings_proto_rawDescGZIP(), []int{5}
}

func (x *UpsertHoldingRequest) GetHolding() *Holding {
	if x != nil {
		return x.Holding
	}
	return nil
}

type UpsertHoldingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertHoldingResponse) Reset() {
	*x = UpsertHoldingResponse{}
	mi := &file_moneydashboard_v4_holdings_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertHoldingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertHoldingResponse) ProtoMessage() {}

func (x *UpsertHoldingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moneydashboard_v4_holdings_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertHoldingResponse.ProtoReflect.Descriptor instead.
func (*UpsertHoldingResponse) Descriptor() ([]byte, []int) {
	return file_moneydashboard_v4_holdings_proto_rawDescGZIP(), []int{6}
}

var File_moneydashboard_v4_holdings_proto protoreflect.FileDescriptor

var file_moneydashboard_v4_holdings_proto_rawDesc = []byte{
	0x0a, 0x20, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x2f, 0x76, 0x34, 0x2f, 0x68, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x11, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x2e, 0x76, 0x34, 0x1a, 0x20, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x34, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x64, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x34, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x64, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x34, 0x2f, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x6d, 0x6f, 0x6e,
	0x65, 0x79, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x34, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe4, 0x01, 0x0a, 0x07, 0x48,
	0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x2e, 0x0a, 0x05, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x6e,
	0x65, 0x79, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x34, 0x0a, 0x07, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d,
	0x6f, 0x6e, 0x65, 0x79, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x27, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4e, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x48, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x68, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x48, 0x6f, 0x6c, 0x64, 0x69, 0x6e,
	0x67, 0x52, 0x07, 0x68, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x48, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x50, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x48, 0x6f, 0x6c,
	0x64, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a,
	0x08, 0x68, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x2e, 0x76, 0x34, 0x2e, 0x48, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x68, 0x6f, 0x6c,
	0x64, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x4c, 0x0a, 0x14, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x48,
	0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a,
	0x07, 0x68, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e,
	0x76, 0x34, 0x2e, 0x48, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x68, 0x6f, 0x6c, 0x64,
	0x69, 0x6e, 0x67, 0x22, 0x17, 0x0a, 0x15, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x48, 0x6f, 0x6c,
	0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xc4, 0x02, 0x0a,
	0x10, 0x4d, 0x44, 0x48, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x65, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x42,
	0x79, 0x49, 0x64, 0x12, 0x28, 0x2e, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x64, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6c, 0x64, 0x69,
	0x6e, 0x67, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e,
	0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76,
	0x34, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x48, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x28, 0x2e, 0x6d, 0x6f, 0x6e,
	0x65, 0x79, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x48, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x48,
	0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x62, 0x0a, 0x0d, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x48, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67,
	0x12, 0x27, 0x2e, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x2e, 0x76, 0x34, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x48, 0x6f, 0x6c, 0x64, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6d, 0x6f, 0x6e, 0x65,
	0x79, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x55, 0x70,
	0x73, 0x65, 0x72, 0x74, 0x48, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x51, 0x5a, 0x4f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6d, 0x61, 0x72, 0x6b, 0x6f, 0x72, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x72, 0x2f, 0x6d,
	0x6f, 0x6e, 0x65, 0x79, 0x2d, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x65, 0x6e, 0x2f,
	0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x76,
	0x34, 0x3b, 0x6d, 0x64, 0x76, 0x34, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_moneydashboard_v4_holdings_proto_rawDescOnce sync.Once
	file_moneydashboard_v4_holdings_proto_rawDescData = file_moneydashboard_v4_holdings_proto_rawDesc
)

func file_moneydashboard_v4_holdings_proto_rawDescGZIP() []byte {
	file_moneydashboard_v4_holdings_proto_rawDescOnce.Do(func() {
		file_moneydashboard_v4_holdings_proto_rawDescData = protoimpl.X.CompressGZIP(file_moneydashboard_v4_holdings_proto_rawDescData)
	})
	return file_moneydashboard_v4_holdings_proto_rawDescData
}

var file_moneydashboard_v4_holdings_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_moneydashboard_v4_holdings_proto_goTypes = []any{
	(*Holding)(nil),                // 0: moneydashboard.v4.Holding
	(*GetHoldingByIdRequest)(nil),  // 1: moneydashboard.v4.GetHoldingByIdRequest
	(*GetHoldingByIdResponse)(nil), // 2: moneydashboard.v4.GetHoldingByIdResponse
	(*GetAllHoldingsRequest)(nil),  // 3: moneydashboard.v4.GetAllHoldingsRequest
	(*GetAllHoldingsResponse)(nil), // 4: moneydashboard.v4.GetAllHoldingsResponse
	(*UpsertHoldingRequest)(nil),   // 5: moneydashboard.v4.UpsertHoldingRequest
	(*UpsertHoldingResponse)(nil),  // 6: moneydashboard.v4.UpsertHoldingResponse
	(*Currency)(nil),               // 7: moneydashboard.v4.Currency
	(*Asset)(nil),                  // 8: moneydashboard.v4.Asset
	(*Account)(nil),                // 9: moneydashboard.v4.Account
}
var file_moneydashboard_v4_holdings_proto_depIdxs = []int32{
	7, // 0: moneydashboard.v4.Holding.currency:type_name -> moneydashboard.v4.Currency
	8, // 1: moneydashboard.v4.Holding.asset:type_name -> moneydashboard.v4.Asset
	9, // 2: moneydashboard.v4.Holding.account:type_name -> moneydashboard.v4.Account
	0, // 3: moneydashboard.v4.GetHoldingByIdResponse.holding:type_name -> moneydashboard.v4.Holding
	0, // 4: moneydashboard.v4.GetAllHoldingsResponse.holdings:type_name -> moneydashboard.v4.Holding
	0, // 5: moneydashboard.v4.UpsertHoldingRequest.holding:type_name -> moneydashboard.v4.Holding
	1, // 6: moneydashboard.v4.MDHoldingService.GetHoldingById:input_type -> moneydashboard.v4.GetHoldingByIdRequest
	3, // 7: moneydashboard.v4.MDHoldingService.GetAllHoldings:input_type -> moneydashboard.v4.GetAllHoldingsRequest
	5, // 8: moneydashboard.v4.MDHoldingService.UpsertHolding:input_type -> moneydashboard.v4.UpsertHoldingRequest
	2, // 9: moneydashboard.v4.MDHoldingService.GetHoldingById:output_type -> moneydashboard.v4.GetHoldingByIdResponse
	4, // 10: moneydashboard.v4.MDHoldingService.GetAllHoldings:output_type -> moneydashboard.v4.GetAllHoldingsResponse
	6, // 11: moneydashboard.v4.MDHoldingService.UpsertHolding:output_type -> moneydashboard.v4.UpsertHoldingResponse
	9, // [9:12] is the sub-list for method output_type
	6, // [6:9] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_moneydashboard_v4_holdings_proto_init() }
func file_moneydashboard_v4_holdings_proto_init() {
	if File_moneydashboard_v4_holdings_proto != nil {
		return
	}
	file_moneydashboard_v4_accounts_proto_init()
	file_moneydashboard_v4_assets_proto_init()
	file_moneydashboard_v4_currencies_proto_init()
	file_moneydashboard_v4_users_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_moneydashboard_v4_holdings_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_moneydashboard_v4_holdings_proto_goTypes,
		DependencyIndexes: file_moneydashboard_v4_holdings_proto_depIdxs,
		MessageInfos:      file_moneydashboard_v4_holdings_proto_msgTypes,
	}.Build()
	File_moneydashboard_v4_holdings_proto = out.File
	file_moneydashboard_v4_holdings_proto_rawDesc = nil
	file_moneydashboard_v4_holdings_proto_goTypes = nil
	file_moneydashboard_v4_holdings_proto_depIdxs = nil
}
