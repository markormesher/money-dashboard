// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: moneydashboard/v4/rates.proto

package mdv4connect

import (
	connect "connectrpc.com/connect"
	context "context"
	errors "errors"
	v4 "github.com/markormesher/money-dashboard/internal/api_gen/moneydashboard/v4"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect.IsAtLeastVersion1_13_0

const (
	// MDRateServiceName is the fully-qualified name of the MDRateService service.
	MDRateServiceName = "moneydashboard.v4.MDRateService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// MDRateServiceGetLatestRatesProcedure is the fully-qualified name of the MDRateService's
	// GetLatestRates RPC.
	MDRateServiceGetLatestRatesProcedure = "/moneydashboard.v4.MDRateService/GetLatestRates"
	// MDRateServiceUpsertRateProcedure is the fully-qualified name of the MDRateService's UpsertRate
	// RPC.
	MDRateServiceUpsertRateProcedure = "/moneydashboard.v4.MDRateService/UpsertRate"
)

// MDRateServiceClient is a client for the moneydashboard.v4.MDRateService service.
type MDRateServiceClient interface {
	GetLatestRates(context.Context, *connect.Request[v4.GetLatestRatesRequest]) (*connect.Response[v4.GetLatestRatesResponse], error)
	UpsertRate(context.Context, *connect.Request[v4.UpsertRateRequest]) (*connect.Response[v4.UpsertRateResponse], error)
}

// NewMDRateServiceClient constructs a client for the moneydashboard.v4.MDRateService service. By
// default, it uses the Connect protocol with the binary Protobuf Codec, asks for gzipped responses,
// and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the
// connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewMDRateServiceClient(httpClient connect.HTTPClient, baseURL string, opts ...connect.ClientOption) MDRateServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	mDRateServiceMethods := v4.File_moneydashboard_v4_rates_proto.Services().ByName("MDRateService").Methods()
	return &mDRateServiceClient{
		getLatestRates: connect.NewClient[v4.GetLatestRatesRequest, v4.GetLatestRatesResponse](
			httpClient,
			baseURL+MDRateServiceGetLatestRatesProcedure,
			connect.WithSchema(mDRateServiceMethods.ByName("GetLatestRates")),
			connect.WithClientOptions(opts...),
		),
		upsertRate: connect.NewClient[v4.UpsertRateRequest, v4.UpsertRateResponse](
			httpClient,
			baseURL+MDRateServiceUpsertRateProcedure,
			connect.WithSchema(mDRateServiceMethods.ByName("UpsertRate")),
			connect.WithClientOptions(opts...),
		),
	}
}

// mDRateServiceClient implements MDRateServiceClient.
type mDRateServiceClient struct {
	getLatestRates *connect.Client[v4.GetLatestRatesRequest, v4.GetLatestRatesResponse]
	upsertRate     *connect.Client[v4.UpsertRateRequest, v4.UpsertRateResponse]
}

// GetLatestRates calls moneydashboard.v4.MDRateService.GetLatestRates.
func (c *mDRateServiceClient) GetLatestRates(ctx context.Context, req *connect.Request[v4.GetLatestRatesRequest]) (*connect.Response[v4.GetLatestRatesResponse], error) {
	return c.getLatestRates.CallUnary(ctx, req)
}

// UpsertRate calls moneydashboard.v4.MDRateService.UpsertRate.
func (c *mDRateServiceClient) UpsertRate(ctx context.Context, req *connect.Request[v4.UpsertRateRequest]) (*connect.Response[v4.UpsertRateResponse], error) {
	return c.upsertRate.CallUnary(ctx, req)
}

// MDRateServiceHandler is an implementation of the moneydashboard.v4.MDRateService service.
type MDRateServiceHandler interface {
	GetLatestRates(context.Context, *connect.Request[v4.GetLatestRatesRequest]) (*connect.Response[v4.GetLatestRatesResponse], error)
	UpsertRate(context.Context, *connect.Request[v4.UpsertRateRequest]) (*connect.Response[v4.UpsertRateResponse], error)
}

// NewMDRateServiceHandler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewMDRateServiceHandler(svc MDRateServiceHandler, opts ...connect.HandlerOption) (string, http.Handler) {
	mDRateServiceMethods := v4.File_moneydashboard_v4_rates_proto.Services().ByName("MDRateService").Methods()
	mDRateServiceGetLatestRatesHandler := connect.NewUnaryHandler(
		MDRateServiceGetLatestRatesProcedure,
		svc.GetLatestRates,
		connect.WithSchema(mDRateServiceMethods.ByName("GetLatestRates")),
		connect.WithHandlerOptions(opts...),
	)
	mDRateServiceUpsertRateHandler := connect.NewUnaryHandler(
		MDRateServiceUpsertRateProcedure,
		svc.UpsertRate,
		connect.WithSchema(mDRateServiceMethods.ByName("UpsertRate")),
		connect.WithHandlerOptions(opts...),
	)
	return "/moneydashboard.v4.MDRateService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case MDRateServiceGetLatestRatesProcedure:
			mDRateServiceGetLatestRatesHandler.ServeHTTP(w, r)
		case MDRateServiceUpsertRateProcedure:
			mDRateServiceUpsertRateHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedMDRateServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedMDRateServiceHandler struct{}

func (UnimplementedMDRateServiceHandler) GetLatestRates(context.Context, *connect.Request[v4.GetLatestRatesRequest]) (*connect.Response[v4.GetLatestRatesResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("moneydashboard.v4.MDRateService.GetLatestRates is not implemented"))
}

func (UnimplementedMDRateServiceHandler) UpsertRate(context.Context, *connect.Request[v4.UpsertRateRequest]) (*connect.Response[v4.UpsertRateResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("moneydashboard.v4.MDRateService.UpsertRate is not implemented"))
}
