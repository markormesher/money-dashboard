// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        (unknown)
// source: moneydashboard/v4/reporting.proto

package mdv4

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HoldingBalance struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Holding       *Holding               `protobuf:"bytes,1,opt,name=holding,proto3" json:"holding,omitempty"`
	RawBalance    float64                `protobuf:"fixed64,2,opt,name=raw_balance,json=rawBalance,proto3" json:"raw_balance,omitempty"`
	GbpBalance    float64                `protobuf:"fixed64,3,opt,name=gbp_balance,json=gbpBalance,proto3" json:"gbp_balance,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HoldingBalance) Reset() {
	*x = HoldingBalance{}
	mi := &file_moneydashboard_v4_reporting_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HoldingBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HoldingBalance) ProtoMessage() {}

func (x *HoldingBalance) ProtoReflect() protoreflect.Message {
	mi := &file_moneydashboard_v4_reporting_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HoldingBalance.ProtoReflect.Descriptor instead.
func (*HoldingBalance) Descriptor() ([]byte, []int) {
	return file_moneydashboard_v4_reporting_proto_rawDescGZIP(), []int{0}
}

func (x *HoldingBalance) GetHolding() *Holding {
	if x != nil {
		return x.Holding
	}
	return nil
}

func (x *HoldingBalance) GetRawBalance() float64 {
	if x != nil {
		return x.RawBalance
	}
	return 0
}

func (x *HoldingBalance) GetGbpBalance() float64 {
	if x != nil {
		return x.GbpBalance
	}
	return 0
}

type CategoryBalance struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Category      *Category              `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	Asset         *Asset                 `protobuf:"bytes,2,opt,name=asset,proto3" json:"asset,omitempty"`
	Currency      *Currency              `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	RawBalance    float64                `protobuf:"fixed64,4,opt,name=raw_balance,json=rawBalance,proto3" json:"raw_balance,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CategoryBalance) Reset() {
	*x = CategoryBalance{}
	mi := &file_moneydashboard_v4_reporting_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CategoryBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryBalance) ProtoMessage() {}

func (x *CategoryBalance) ProtoReflect() protoreflect.Message {
	mi := &file_moneydashboard_v4_reporting_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryBalance.ProtoReflect.Descriptor instead.
func (*CategoryBalance) Descriptor() ([]byte, []int) {
	return file_moneydashboard_v4_reporting_proto_rawDescGZIP(), []int{1}
}

func (x *CategoryBalance) GetCategory() *Category {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *CategoryBalance) GetAsset() *Asset {
	if x != nil {
		return x.Asset
	}
	return nil
}

func (x *CategoryBalance) GetCurrency() *Currency {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *CategoryBalance) GetRawBalance() float64 {
	if x != nil {
		return x.RawBalance
	}
	return 0
}

type EnvelopeBalance struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Envelope      *Envelope              `protobuf:"bytes,1,opt,name=envelope,proto3" json:"envelope,omitempty"`
	GbpBalance    float64                `protobuf:"fixed64,2,opt,name=gbp_balance,json=gbpBalance,proto3" json:"gbp_balance,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnvelopeBalance) Reset() {
	*x = EnvelopeBalance{}
	mi := &file_moneydashboard_v4_reporting_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnvelopeBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvelopeBalance) ProtoMessage() {}

func (x *EnvelopeBalance) ProtoReflect() protoreflect.Message {
	mi := &file_moneydashboard_v4_reporting_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvelopeBalance.ProtoReflect.Descriptor instead.
func (*EnvelopeBalance) Descriptor() ([]byte, []int) {
	return file_moneydashboard_v4_reporting_proto_rawDescGZIP(), []int{2}
}

func (x *EnvelopeBalance) GetEnvelope() *Envelope {
	if x != nil {
		return x.Envelope
	}
	return nil
}

func (x *EnvelopeBalance) GetGbpBalance() float64 {
	if x != nil {
		return x.GbpBalance
	}
	return 0
}

type BalanceHistoryEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Date          int64                  `protobuf:"varint,1,opt,name=date,proto3" json:"date,omitempty"`
	GbpBalance    float64                `protobuf:"fixed64,2,opt,name=gbp_balance,json=gbpBalance,proto3" json:"gbp_balance,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BalanceHistoryEntry) Reset() {
	*x = BalanceHistoryEntry{}
	mi := &file_moneydashboard_v4_reporting_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BalanceHistoryEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceHistoryEntry) ProtoMessage() {}

func (x *BalanceHistoryEntry) ProtoReflect() protoreflect.Message {
	mi := &file_moneydashboard_v4_reporting_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceHistoryEntry.ProtoReflect.Descriptor instead.
func (*BalanceHistoryEntry) Descriptor() ([]byte, []int) {
	return file_moneydashboard_v4_reporting_proto_rawDescGZIP(), []int{3}
}

func (x *BalanceHistoryEntry) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *BalanceHistoryEntry) GetGbpBalance() float64 {
	if x != nil {
		return x.GbpBalance
	}
	return 0
}

type TaxReport struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	InterestIncome   []*HoldingBalance      `protobuf:"bytes,1,rep,name=interest_income,json=interestIncome,proto3" json:"interest_income,omitempty"`
	DividendIncome   []*HoldingBalance      `protobuf:"bytes,2,rep,name=dividend_income,json=dividendIncome,proto3" json:"dividend_income,omitempty"`
	CapitalDebugging []string               `protobuf:"bytes,3,rep,name=capital_debugging,json=capitalDebugging,proto3" json:"capital_debugging,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TaxReport) Reset() {
	*x = TaxReport{}
	mi := &file_moneydashboard_v4_reporting_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaxReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaxReport) ProtoMessage() {}

func (x *TaxReport) ProtoReflect() protoreflect.Message {
	mi := &file_moneydashboard_v4_reporting_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaxReport.ProtoReflect.Descriptor instead.
func (*TaxReport) Descriptor() ([]byte, []int) {
	return file_moneydashboard_v4_reporting_proto_rawDescGZIP(), []int{4}
}

func (x *TaxReport) GetInterestIncome() []*HoldingBalance {
	if x != nil {
		return x.InterestIncome
	}
	return nil
}

func (x *TaxReport) GetDividendIncome() []*HoldingBalance {
	if x != nil {
		return x.DividendIncome
	}
	return nil
}

func (x *TaxReport) GetCapitalDebugging() []string {
	if x != nil {
		return x.CapitalDebugging
	}
	return nil
}

type GetHoldingBalancesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHoldingBalancesRequest) Reset() {
	*x = GetHoldingBalancesRequest{}
	mi := &file_moneydashboard_v4_reporting_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHoldingBalancesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHoldingBalancesRequest) ProtoMessage() {}

func (x *GetHoldingBalancesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moneydashboard_v4_reporting_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHoldingBalancesRequest.ProtoReflect.Descriptor instead.
func (*GetHoldingBalancesRequest) Descriptor() ([]byte, []int) {
	return file_moneydashboard_v4_reporting_proto_rawDescGZIP(), []int{5}
}

type GetHoldingBalancesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Balances      []*HoldingBalance      `protobuf:"bytes,1,rep,name=balances,proto3" json:"balances,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHoldingBalancesResponse) Reset() {
	*x = GetHoldingBalancesResponse{}
	mi := &file_moneydashboard_v4_reporting_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHoldingBalancesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHoldingBalancesResponse) ProtoMessage() {}

func (x *GetHoldingBalancesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moneydashboard_v4_reporting_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHoldingBalancesResponse.ProtoReflect.Descriptor instead.
func (*GetHoldingBalancesResponse) Descriptor() ([]byte, []int) {
	return file_moneydashboard_v4_reporting_proto_rawDescGZIP(), []int{6}
}

func (x *GetHoldingBalancesResponse) GetBalances() []*HoldingBalance {
	if x != nil {
		return x.Balances
	}
	return nil
}

type GetNonZeroMemoBalancesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNonZeroMemoBalancesRequest) Reset() {
	*x = GetNonZeroMemoBalancesRequest{}
	mi := &file_moneydashboard_v4_reporting_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNonZeroMemoBalancesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNonZeroMemoBalancesRequest) ProtoMessage() {}

func (x *GetNonZeroMemoBalancesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moneydashboard_v4_reporting_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNonZeroMemoBalancesRequest.ProtoReflect.Descriptor instead.
func (*GetNonZeroMemoBalancesRequest) Descriptor() ([]byte, []int) {
	return file_moneydashboard_v4_reporting_proto_rawDescGZIP(), []int{7}
}

type GetNonZeroMemoBalancesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Balances      []*CategoryBalance     `protobuf:"bytes,1,rep,name=balances,proto3" json:"balances,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNonZeroMemoBalancesResponse) Reset() {
	*x = GetNonZeroMemoBalancesResponse{}
	mi := &file_moneydashboard_v4_reporting_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNonZeroMemoBalancesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNonZeroMemoBalancesResponse) ProtoMessage() {}

func (x *GetNonZeroMemoBalancesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moneydashboard_v4_reporting_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNonZeroMemoBalancesResponse.ProtoReflect.Descriptor instead.
func (*GetNonZeroMemoBalancesResponse) Descriptor() ([]byte, []int) {
	return file_moneydashboard_v4_reporting_proto_rawDescGZIP(), []int{8}
}

func (x *GetNonZeroMemoBalancesResponse) GetBalances() []*CategoryBalance {
	if x != nil {
		return x.Balances
	}
	return nil
}

type GetEnvelopeBalancesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEnvelopeBalancesRequest) Reset() {
	*x = GetEnvelopeBalancesRequest{}
	mi := &file_moneydashboard_v4_reporting_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEnvelopeBalancesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEnvelopeBalancesRequest) ProtoMessage() {}

func (x *GetEnvelopeBalancesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moneydashboard_v4_reporting_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEnvelopeBalancesRequest.ProtoReflect.Descriptor instead.
func (*GetEnvelopeBalancesRequest) Descriptor() ([]byte, []int) {
	return file_moneydashboard_v4_reporting_proto_rawDescGZIP(), []int{9}
}

type GetEnvelopeBalancesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Balances      []*EnvelopeBalance     `protobuf:"bytes,1,rep,name=balances,proto3" json:"balances,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEnvelopeBalancesResponse) Reset() {
	*x = GetEnvelopeBalancesResponse{}
	mi := &file_moneydashboard_v4_reporting_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEnvelopeBalancesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEnvelopeBalancesResponse) ProtoMessage() {}

func (x *GetEnvelopeBalancesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moneydashboard_v4_reporting_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEnvelopeBalancesResponse.ProtoReflect.Descriptor instead.
func (*GetEnvelopeBalancesResponse) Descriptor() ([]byte, []int) {
	return file_moneydashboard_v4_reporting_proto_rawDescGZIP(), []int{10}
}

func (x *GetEnvelopeBalancesResponse) GetBalances() []*EnvelopeBalance {
	if x != nil {
		return x.Balances
	}
	return nil
}

type GetBalanceHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartDate     int64                  `protobuf:"varint,1,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate       int64                  `protobuf:"varint,2,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBalanceHistoryRequest) Reset() {
	*x = GetBalanceHistoryRequest{}
	mi := &file_moneydashboard_v4_reporting_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBalanceHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceHistoryRequest) ProtoMessage() {}

func (x *GetBalanceHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moneydashboard_v4_reporting_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetBalanceHistoryRequest) Descriptor() ([]byte, []int) {
	return file_moneydashboard_v4_reporting_proto_rawDescGZIP(), []int{11}
}

func (x *GetBalanceHistoryRequest) GetStartDate() int64 {
	if x != nil {
		return x.StartDate
	}
	return 0
}

func (x *GetBalanceHistoryRequest) GetEndDate() int64 {
	if x != nil {
		return x.EndDate
	}
	return 0
}

type GetBalanceHistoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entries       []*BalanceHistoryEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBalanceHistoryResponse) Reset() {
	*x = GetBalanceHistoryResponse{}
	mi := &file_moneydashboard_v4_reporting_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBalanceHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceHistoryResponse) ProtoMessage() {}

func (x *GetBalanceHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moneydashboard_v4_reporting_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetBalanceHistoryResponse) Descriptor() ([]byte, []int) {
	return file_moneydashboard_v4_reporting_proto_rawDescGZIP(), []int{12}
}

func (x *GetBalanceHistoryResponse) GetEntries() []*BalanceHistoryEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type GetTaxReportRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaxYear       int32                  `protobuf:"varint,1,opt,name=tax_year,json=taxYear,proto3" json:"tax_year,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTaxReportRequest) Reset() {
	*x = GetTaxReportRequest{}
	mi := &file_moneydashboard_v4_reporting_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaxReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaxReportRequest) ProtoMessage() {}

func (x *GetTaxReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moneydashboard_v4_reporting_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaxReportRequest.ProtoReflect.Descriptor instead.
func (*GetTaxReportRequest) Descriptor() ([]byte, []int) {
	return file_moneydashboard_v4_reporting_proto_rawDescGZIP(), []int{13}
}

func (x *GetTaxReportRequest) GetTaxYear() int32 {
	if x != nil {
		return x.TaxYear
	}
	return 0
}

type GetTaxReportResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaxReport     *TaxReport             `protobuf:"bytes,1,opt,name=tax_report,json=taxReport,proto3" json:"tax_report,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTaxReportResponse) Reset() {
	*x = GetTaxReportResponse{}
	mi := &file_moneydashboard_v4_reporting_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaxReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaxReportResponse) ProtoMessage() {}

func (x *GetTaxReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moneydashboard_v4_reporting_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaxReportResponse.ProtoReflect.Descriptor instead.
func (*GetTaxReportResponse) Descriptor() ([]byte, []int) {
	return file_moneydashboard_v4_reporting_proto_rawDescGZIP(), []int{14}
}

func (x *GetTaxReportResponse) GetTaxReport() *TaxReport {
	if x != nil {
		return x.TaxReport
	}
	return nil
}

var File_moneydashboard_v4_reporting_proto protoreflect.FileDescriptor

var file_moneydashboard_v4_reporting_proto_rawDesc = []byte{
	0x0a, 0x21, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x2f, 0x76, 0x34, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x11, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x1a, 0x1e, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x34, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x34, 0x2f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x6d, 0x6f, 0x6e, 0x65,
	0x79, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x34, 0x2f, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21,
	0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x76,
	0x34, 0x2f, 0x65, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x20, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x2f, 0x76, 0x34, 0x2f, 0x68, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x88, 0x01, 0x0a, 0x0e, 0x48, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x68, 0x6f, 0x6c, 0x64, 0x69, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x64,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x48, 0x6f, 0x6c, 0x64,
	0x69, 0x6e, 0x67, 0x52, 0x07, 0x68, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x0b,
	0x72, 0x61, 0x77, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0a, 0x72, 0x61, 0x77, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x67, 0x62, 0x70, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0a, 0x67, 0x62, 0x70, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0xd4,
	0x01, 0x0a, 0x0f, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x2e, 0x0a, 0x05, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x6e,
	0x65, 0x79, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x37, 0x0a, 0x08, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76,
	0x34, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x61, 0x77, 0x5f, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x72, 0x61, 0x77, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x6b, 0x0a, 0x0f, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70,
	0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x65, 0x6e, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x6f, 0x6e,
	0x65, 0x79, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x45,
	0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x52, 0x08, 0x65, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x62, 0x70, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x67, 0x62, 0x70, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x22, 0x4a, 0x0a, 0x13, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x67, 0x62, 0x70, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0a, 0x67, 0x62, 0x70, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0xd0,
	0x01, 0x0a, 0x09, 0x54, 0x61, 0x78, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x4a, 0x0a, 0x0f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x48, 0x6f, 0x6c, 0x64, 0x69, 0x6e,
	0x67, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x4a, 0x0a, 0x0f, 0x64, 0x69, 0x76, 0x69,
	0x64, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x48, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x0e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x49, 0x6e,
	0x63, 0x6f, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x61, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x5f,
	0x64, 0x65, 0x62, 0x75, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x10, 0x63, 0x61, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x44, 0x65, 0x62, 0x75, 0x67, 0x67, 0x69, 0x6e,
	0x67, 0x22, 0x1b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5b,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e,
	0x76, 0x34, 0x2e, 0x48, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x08, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x1f, 0x0a, 0x1d, 0x47,
	0x65, 0x74, 0x4e, 0x6f, 0x6e, 0x5a, 0x65, 0x72, 0x6f, 0x4d, 0x65, 0x6d, 0x6f, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x60, 0x0a, 0x1e,
	0x47, 0x65, 0x74, 0x4e, 0x6f, 0x6e, 0x5a, 0x65, 0x72, 0x6f, 0x4d, 0x65, 0x6d, 0x6f, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e,
	0x0a, 0x08, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x2e, 0x76, 0x34, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x1c,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5d, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x08, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76,
	0x34, 0x2e, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x08, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x54, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x22, 0x5d, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40,
	0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x2e, 0x76, 0x34, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x22, 0x30, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x61, 0x78, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x78, 0x5f, 0x79,
	0x65, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x61, 0x78, 0x59, 0x65,
	0x61, 0x72, 0x22, 0x53, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x61, 0x78, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x74, 0x61,
	0x78, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e,
	0x76, 0x34, 0x2e, 0x54, 0x61, 0x78, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x09, 0x74, 0x61,
	0x78, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x32, 0xcd, 0x04, 0x0a, 0x12, 0x4d, 0x44, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x71,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x12, 0x2c, 0x2e, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6c, 0x64,
	0x69, 0x6e, 0x67, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6c, 0x64, 0x69, 0x6e,
	0x67, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x7d, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x6e, 0x5a, 0x65, 0x72, 0x6f, 0x4d,
	0x65, 0x6d, 0x6f, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x30, 0x2e, 0x6d, 0x6f,
	0x6e, 0x65, 0x79, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e,
	0x47, 0x65, 0x74, 0x4e, 0x6f, 0x6e, 0x5a, 0x65, 0x72, 0x6f, 0x4d, 0x65, 0x6d, 0x6f, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e,
	0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76,
	0x34, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x6e, 0x5a, 0x65, 0x72, 0x6f, 0x4d, 0x65, 0x6d, 0x6f,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x74, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x2d, 0x2e, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x64,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x47, 0x65, 0x74, 0x45,
	0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x64, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x2b, 0x2e, 0x6d, 0x6f,
	0x6e, 0x65, 0x79, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6d, 0x6f, 0x6e, 0x65, 0x79,
	0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x54, 0x61, 0x78,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x26, 0x2e, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x64, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x34, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61,
	0x78, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27,
	0x2e, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e,
	0x76, 0x34, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x78, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x51, 0x5a, 0x4f, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x72, 0x6b, 0x6f, 0x72, 0x6d, 0x65, 0x73, 0x68,
	0x65, 0x72, 0x2f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x2d, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x61, 0x70, 0x69, 0x5f,
	0x67, 0x65, 0x6e, 0x2f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x2f, 0x76, 0x34, 0x3b, 0x6d, 0x64, 0x76, 0x34, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_moneydashboard_v4_reporting_proto_rawDescOnce sync.Once
	file_moneydashboard_v4_reporting_proto_rawDescData = file_moneydashboard_v4_reporting_proto_rawDesc
)

func file_moneydashboard_v4_reporting_proto_rawDescGZIP() []byte {
	file_moneydashboard_v4_reporting_proto_rawDescOnce.Do(func() {
		file_moneydashboard_v4_reporting_proto_rawDescData = protoimpl.X.CompressGZIP(file_moneydashboard_v4_reporting_proto_rawDescData)
	})
	return file_moneydashboard_v4_reporting_proto_rawDescData
}

var file_moneydashboard_v4_reporting_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_moneydashboard_v4_reporting_proto_goTypes = []any{
	(*HoldingBalance)(nil),                 // 0: moneydashboard.v4.HoldingBalance
	(*CategoryBalance)(nil),                // 1: moneydashboard.v4.CategoryBalance
	(*EnvelopeBalance)(nil),                // 2: moneydashboard.v4.EnvelopeBalance
	(*BalanceHistoryEntry)(nil),            // 3: moneydashboard.v4.BalanceHistoryEntry
	(*TaxReport)(nil),                      // 4: moneydashboard.v4.TaxReport
	(*GetHoldingBalancesRequest)(nil),      // 5: moneydashboard.v4.GetHoldingBalancesRequest
	(*GetHoldingBalancesResponse)(nil),     // 6: moneydashboard.v4.GetHoldingBalancesResponse
	(*GetNonZeroMemoBalancesRequest)(nil),  // 7: moneydashboard.v4.GetNonZeroMemoBalancesRequest
	(*GetNonZeroMemoBalancesResponse)(nil), // 8: moneydashboard.v4.GetNonZeroMemoBalancesResponse
	(*GetEnvelopeBalancesRequest)(nil),     // 9: moneydashboard.v4.GetEnvelopeBalancesRequest
	(*GetEnvelopeBalancesResponse)(nil),    // 10: moneydashboard.v4.GetEnvelopeBalancesResponse
	(*GetBalanceHistoryRequest)(nil),       // 11: moneydashboard.v4.GetBalanceHistoryRequest
	(*GetBalanceHistoryResponse)(nil),      // 12: moneydashboard.v4.GetBalanceHistoryResponse
	(*GetTaxReportRequest)(nil),            // 13: moneydashboard.v4.GetTaxReportRequest
	(*GetTaxReportResponse)(nil),           // 14: moneydashboard.v4.GetTaxReportResponse
	(*Holding)(nil),                        // 15: moneydashboard.v4.Holding
	(*Category)(nil),                       // 16: moneydashboard.v4.Category
	(*Asset)(nil),                          // 17: moneydashboard.v4.Asset
	(*Currency)(nil),                       // 18: moneydashboard.v4.Currency
	(*Envelope)(nil),                       // 19: moneydashboard.v4.Envelope
}
var file_moneydashboard_v4_reporting_proto_depIdxs = []int32{
	15, // 0: moneydashboard.v4.HoldingBalance.holding:type_name -> moneydashboard.v4.Holding
	16, // 1: moneydashboard.v4.CategoryBalance.category:type_name -> moneydashboard.v4.Category
	17, // 2: moneydashboard.v4.CategoryBalance.asset:type_name -> moneydashboard.v4.Asset
	18, // 3: moneydashboard.v4.CategoryBalance.currency:type_name -> moneydashboard.v4.Currency
	19, // 4: moneydashboard.v4.EnvelopeBalance.envelope:type_name -> moneydashboard.v4.Envelope
	0,  // 5: moneydashboard.v4.TaxReport.interest_income:type_name -> moneydashboard.v4.HoldingBalance
	0,  // 6: moneydashboard.v4.TaxReport.dividend_income:type_name -> moneydashboard.v4.HoldingBalance
	0,  // 7: moneydashboard.v4.GetHoldingBalancesResponse.balances:type_name -> moneydashboard.v4.HoldingBalance
	1,  // 8: moneydashboard.v4.GetNonZeroMemoBalancesResponse.balances:type_name -> moneydashboard.v4.CategoryBalance
	2,  // 9: moneydashboard.v4.GetEnvelopeBalancesResponse.balances:type_name -> moneydashboard.v4.EnvelopeBalance
	3,  // 10: moneydashboard.v4.GetBalanceHistoryResponse.entries:type_name -> moneydashboard.v4.BalanceHistoryEntry
	4,  // 11: moneydashboard.v4.GetTaxReportResponse.tax_report:type_name -> moneydashboard.v4.TaxReport
	5,  // 12: moneydashboard.v4.MDReportingService.GetHoldingBalances:input_type -> moneydashboard.v4.GetHoldingBalancesRequest
	7,  // 13: moneydashboard.v4.MDReportingService.GetNonZeroMemoBalances:input_type -> moneydashboard.v4.GetNonZeroMemoBalancesRequest
	9,  // 14: moneydashboard.v4.MDReportingService.GetEnvelopeBalances:input_type -> moneydashboard.v4.GetEnvelopeBalancesRequest
	11, // 15: moneydashboard.v4.MDReportingService.GetBalanceHistory:input_type -> moneydashboard.v4.GetBalanceHistoryRequest
	13, // 16: moneydashboard.v4.MDReportingService.GetTaxReport:input_type -> moneydashboard.v4.GetTaxReportRequest
	6,  // 17: moneydashboard.v4.MDReportingService.GetHoldingBalances:output_type -> moneydashboard.v4.GetHoldingBalancesResponse
	8,  // 18: moneydashboard.v4.MDReportingService.GetNonZeroMemoBalances:output_type -> moneydashboard.v4.GetNonZeroMemoBalancesResponse
	10, // 19: moneydashboard.v4.MDReportingService.GetEnvelopeBalances:output_type -> moneydashboard.v4.GetEnvelopeBalancesResponse
	12, // 20: moneydashboard.v4.MDReportingService.GetBalanceHistory:output_type -> moneydashboard.v4.GetBalanceHistoryResponse
	14, // 21: moneydashboard.v4.MDReportingService.GetTaxReport:output_type -> moneydashboard.v4.GetTaxReportResponse
	17, // [17:22] is the sub-list for method output_type
	12, // [12:17] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_moneydashboard_v4_reporting_proto_init() }
func file_moneydashboard_v4_reporting_proto_init() {
	if File_moneydashboard_v4_reporting_proto != nil {
		return
	}
	file_moneydashboard_v4_assets_proto_init()
	file_moneydashboard_v4_categories_proto_init()
	file_moneydashboard_v4_currencies_proto_init()
	file_moneydashboard_v4_envelopes_proto_init()
	file_moneydashboard_v4_holdings_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_moneydashboard_v4_reporting_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_moneydashboard_v4_reporting_proto_goTypes,
		DependencyIndexes: file_moneydashboard_v4_reporting_proto_depIdxs,
		MessageInfos:      file_moneydashboard_v4_reporting_proto_msgTypes,
	}.Build()
	File_moneydashboard_v4_reporting_proto = out.File
	file_moneydashboard_v4_reporting_proto_rawDesc = nil
	file_moneydashboard_v4_reporting_proto_goTypes = nil
	file_moneydashboard_v4_reporting_proto_depIdxs = nil
}
